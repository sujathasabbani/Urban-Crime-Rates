df= pd.read_csv(r'crime.csv')
df.head()
df.info()
df.nunique()
f.describe(d)
df.isnull().sum()
print(df['offense'].value_counts())
df = df.drop(['Unnamed: 0','ccn','xblock','yblock','ward','anc', 'district', 'block_group', 'census_tract','latitude.1', 'longitude.1', 'start_date','end_date', 'location'], axis = 1)
df.head()
df.info()
df.describe()
plt.figure(figsize = (10,5))
sns.countplot(data=df, x='offense')
plt.title('offense Distribution')
plt.xticks(rotation = 20)
plt.show()
splt.figure(figsize = (10,5))
sns.countplot(data=df, x='offense')
plt.title('offense Distribution')
plt.xticks(rotation = 20)
plt.show()
fig = plt.figure(figsize = (15,8))
plat_bar = sns.countplot(df, x= 'method')
plt.xlabel('Months', fontsize = 12)
plt.ylabel('Count of Records', fontsize = 12)
plt.title('Number of Records for each Month', fontsize = 14)
plt.show()
plt.figure(figsize=(10, 6))
sns.histplot(df['psa'], bins=30, kde=True)
plt.title('Distribution of PSA')
plt.xlabel('PSA')
plt.ylabel('Frequency')
plt.show()
plt.figure(figsize=(10, 6))
sns.boxplot(x=df['psa'])
plt.title('Boxplot of PSA')
plt.xlabel('PSA')
plt.show()
categorical_cols = ['shift', 'method', 'offense', 'neighborhood_cluster', 'voting_precinct', 'offense_group']

for col in categorical_cols:
    plt.figure(figsize=(10, 6))
    sns.countplot(y=df[col], order=df[col].value_counts().index)
    plt.title(f'Distribution of {col}')
    plt.xlabel('Count')
    plt.ylabel(col)
    plt.show()
orr = df[['psa']].corr()
sns.heatmap(corr, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Heatmap')
plt.show()
plt.figure(figsize=(10, 6))
sns.countplot(x='shift', hue='offense', data=df)
plt.title('Offense Distribution by Shift')
plt.xlabel('Shift')
plt.ylabel('Count')
plt.legend(title='Offense')
plt.show()
plt.figure(figsize=(10, 6))
sns.countplot(y='neighborhood_cluster', hue='offense_group', data=df, order=df['neighborhood_cluster'].value_counts().index)
plt.title('Offense Group Distribution by Neighborhood Cluster')
plt.xlabel('Count')
plt.ylabel('Neighborhood Cluster')
plt.legend(title='Offense Group')
plt.show()


